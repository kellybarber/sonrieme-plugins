{"version":3,"file":"editor.js","sources":["webpack:///webpack/bootstrap","webpack:///./src/blocks/about-card/components/edit.js","webpack:///./src/blocks/about-card/components/save.js","webpack:///./src/blocks/about-card/index.js","webpack:///./src/blocks/about-card/styles/editor.scss","webpack:///./src/blocks/post-grid/components/edit.js","webpack:///./src/blocks/post-grid/components/save.js","webpack:///./src/blocks/post-grid/index.js","webpack:///./src/blocks/post-grid/styles/editor.scss","webpack:///./src/blocks/service-card/components/edit.js","webpack:///./src/blocks/service-card/components/save.js","webpack:///./src/blocks/service-card/index.js","webpack:///./src/blocks/service-card/styles/editor.scss","webpack:///./src/editor.js","webpack:///external [\"wp\",\"blockEditor\"]","webpack:///external [\"wp\",\"blocks\"]","webpack:///external [\"wp\",\"components\"]","webpack:///external [\"wp\",\"data\"]","webpack:///external [\"wp\",\"element\"]","webpack:///external [\"wp\",\"i18n\"]"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/editor.js\");\n","import { __ } from '@wordpress/i18n'\nimport { RichText } from '@wordpress/block-editor';\n\nconst edit = ({ className, attributes, setAttributes }) => {\n\n    const { title, description } = attributes;\n\n    return (\n        <div className={className}>\n            <RichText\n                className={`${className}__title`}\n                tagName='h3'\n                value={title}\n                onChange={(title) => setAttributes({title})}\n                placeholder={__('Member Name', 'sonrieme-blocks')}\n                allowedFormats={[]}\n            />\n            <RichText\n                className={`${className}__title`}\n                tagName='p'\n                value={description}\n                onChange={(description) => setAttributes({description})}\n                placeholder={__('Member Name', 'sonrieme-blocks')}\n                allowedFormats={[]}\n            />\n        </div>\n    )\n}\n\nexport default edit;","import { getBlockDefaultClassName } from '@wordpress/blocks'\nimport { RichText } from '@wordpress/block-editor'\n\nconst save = ({ attributes }) => {\n\n    const { title, description } = attributes;\n    const className              = getBlockDefaultClassName('sonrieme-blocks/about-card');\n\n    return (\n        <div>\n            {title &&\n            <RichText.Content\n                className={`${className}__title`}\n                tagName='h3'\n                value={title}\n            />}\n            {description &&\n            <RichText.Content\n                className={`${className}__description`}\n                tagName='p'\n                value={description}\n            />}\n        </div>\n    )\n}\n\nexport default save;","import { registerBlockType } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n'\n\nimport edit from './components/edit'\nimport save from './components/save'\n\nimport './styles/editor.scss'\n\nconst attributes = {\n    title : {\n        type     : 'string',\n        source   : 'html',\n        selector : 'h3'\n    },\n    description : {\n        type     : 'string',\n        source   : 'html',\n        selector : 'p'\n    }\n}\n\nregisterBlockType(\"sonrieme-blocks/about-card\", {\n    title       : __(\"About Card\", \"sonrieme-blocks\"),\n    description : __(\"About Card\", \"sonrieme-blocks\"),\n    category    : \"common\",\n    icon        : \"admin-users\",\n    parent      : ['sonrieme-blocks/post-grid'],\n    attributes,\n    edit,\n    save\n});","// extracted by mini-css-extract-plugin","import { __ } from '@wordpress/i18n'\nimport { useState, useEffect } from '@wordpress/element'\nimport { synchronizeBlocksWithTemplate } from '@wordpress/blocks'\nimport { InnerBlocks, InspectorControls } from \"@wordpress/block-editor\"\nimport { PanelBody, RangeControl } from '@wordpress/components'\nimport { withSelect } from '@wordpress/data'\n\nconst edit = ({ className, attributes, setAttributes, posts }) => {\n\n    const { columns, numberOfPosts } = attributes\n\n    const [ template, setTemplate ] = useState([])\n\n    useEffect(() => {\n        if (posts) {\n            const workingPosts = posts.slice(0, numberOfPosts)\n\n            const servicesTemplate = posts && posts.length > 0 ? posts.map(post => (\n                [ 'sonrieme-blocks/service-card', {\n                    title : post.title.raw,\n                    id    : post.featured_media,\n                    url   : post._embedded['wp:featuredmedia'][0].source_url\n                }]\n            )) : []\n\n            setTemplate(servicesTemplate)\n        }\n    }, [ numberOfPosts ])\n\n    return (\n        <div className={ `${className} columns--${columns}` }>\n            <InspectorControls>\n                <PanelBody title={ __('Posts Settings', 'sonrieme-blocks') } >\n                    <RangeControl\n                        label={ __( 'Number of Posts', 'sonrieme-blocks' ) }\n                        value={ numberOfPosts }\n                        onChange={ ( numberOfPosts ) => setAttributes({ numberOfPosts }) }\n                        min={ 1 }\n                        max={ 8 }\n                    />\n                </PanelBody>\n                <PanelBody>\n                    <RangeControl\n                        label={ __( 'Columns', 'sonrieme-blocks' ) }\n                        value={ columns }\n                        onChange={ ( columns ) => setAttributes({ columns }) }\n                        min={ 1 }\n                        max={ 4 }\n                    />\n                </PanelBody>\n            </InspectorControls>\n            <InnerBlocks\n                allowedBlocks={ ['sonrieme-blocks/about-card', 'sonrieme-blocks/services-card'] }\n                template={() =>  posts && posts.length > 0 ? posts.map(post => (\n                    [ 'sonrieme-blocks/service-card', {\n                        title : post.title.raw,\n                        id    : post.featured_media,\n                        url   : post._embedded['wp:featuredmedia'][0].source_url\n                    }]\n                )) : []}\n            />\n        </div>\n    )\n}\n\nexport default withSelect(( select, props ) => {\n    const { attributes : { numberOfPosts } } = props\n\n    const query = {\n        per_page : numberOfPosts,\n        _embed   : true\n    }\n\n    return {\n        posts : select('core').getEntityRecords('postType', 'services', query)\n    }\n})(edit);","import { InnerBlocks } from \"@wordpress/block-editor\";\nimport {getBlockDefaultClassName} from \"@wordpress/blocks\";\n\nconst save = ({ attributes }) => {\n\n    const { columns } = attributes\n    const className   = getBlockDefaultClassName('sonrieme-blocks/about-card');\n\n    return (\n        <div className={`columns--${columns}`}>\n            <InnerBlocks.Content/>\n        </div>\n    )\n}\n\nexport default save;","import { registerBlockType } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n'\n\nimport edit from './components/edit'\nimport save from './components/save'\n\nimport './styles/editor.scss'\n\nconst attributes = {\n    numberOfPosts : {\n        type    : 'number',\n        default : 2\n    },\n    columns : {\n        type    : 'number',\n        default : 1\n    },\n    postCategories : {\n        type : 'string'\n    }\n}\n\nregisterBlockType(\"sonrieme-blocks/post-grid\", {\n    title       : __(\"Post Grid\", \"sonrieme-blocks\"),\n    description : __(\"Post Grid\", \"sonrieme-blocks\"),\n    category    : \"common\",\n    icon        : \"screenoptions\",\n    attributes,\n    edit,\n    save\n});","// extracted by mini-css-extract-plugin","import { __ } from '@wordpress/i18n'\nimport { RichText, MediaPlaceholder, BlockControls, MediaUpload, MediaUploadCheck } from '@wordpress/block-editor';\nimport {IconButton, Toolbar} from '@wordpress/components'\n\nconst edit = ({ className, attributes, setAttributes }) => {\n\n    const { title, id, url } = attributes;\n\n    const setBackgroundImage = () => {\n        if (url) {\n            return { 'background-image' : `url(${url})` }\n        }\n    }\n\n    return (\n        <>\n            <BlockControls>\n                {url &&\n                <Toolbar>\n                    <MediaUploadCheck>\n                        <MediaUpload\n                            allowedTypes={ ['image'] }\n                            value={ id }\n                            onSelect={({ id, url }) => setAttributes({ id, url })}\n                            render={({ open }) => (\n                                <IconButton\n                                    className='icon-button components-toolbar__control'\n                                    icon='edit'\n                                    label={ __('Edit Image', 'sonrieme-blocks') }\n                                    onClick={ open }\n                                />\n                            )}\n                        />\n                    </MediaUploadCheck>\n                    <IconButton\n                        className='icon-button components-toolbar__control'\n                        icon='trash'\n                        label={ __('Remove Image', 'sonrieme-blocks') }\n                        onClick={() => setAttributes({ id : '', url : '' }) }\n                    />\n                </Toolbar>}\n            </BlockControls>\n\n            <div\n                className={`${className} ${!url && 'no-image-set'}`}\n                style={setBackgroundImage()}\n            >\n                {!url &&\n                <MediaPlaceholder\n                    value={id}\n                    onSelect={({ id, url }) => setAttributes({ id, url })}\n                    allowedTypes={ ['image'] }\n                />}\n                {url &&\n                < RichText\n                    className={ `${className}__title` }\n                    tagName='h3'\n                    value={ title }\n                    onChange={ (title) => setAttributes({title}) }\n                    placeholder={ __('Member Name', 'sonrieme-blocks') }\n                    allowedFormats={[]}\n                />\n                }\n            </div>\n        </>\n    )\n}\n\nexport default edit;","import { getBlockDefaultClassName } from '@wordpress/blocks'\nimport { RichText } from '@wordpress/block-editor'\n\nconst save = ({ attributes }) => {\n\n    const { title, id, url } = attributes;\n    const className = getBlockDefaultClassName('sonrieme-blocks/service-card');\n\n    const setBackgroundImage = () => {\n        if (url) {\n            return { 'background-image' : `url(${url})` }\n        }\n    }\n\n    return (\n        <div style={setBackgroundImage()}>\n            {title &&\n            <RichText.Content\n                className={`${className}__title`}\n                tagName='h3'\n                value={title}\n            />}\n        </div>\n    )\n}\n\nexport default save;","import { registerBlockType } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n'\n\nimport edit from './components/edit'\nimport save from './components/save'\n\nimport './styles/editor.scss'\n\nconst attributes = {\n    title : {\n        type     : 'string',\n        source   : 'html',\n        selector : 'h3'\n    },\n    id : {\n        type : 'number'\n    },\n    url : {\n        type : 'string'\n    }\n}\n\nregisterBlockType(\"sonrieme-blocks/service-card\", {\n    title       : __(\"Service Card\", \"sonrieme-blocks\"),\n    description : __(\"Service Card\", \"sonrieme-blocks\"),\n    category    : \"common\",\n    icon        : \"smiley\",\n    parent      : ['sonrieme-blocks/post-grid'],\n    attributes,\n    edit,\n    save\n});","// extracted by mini-css-extract-plugin","import './blocks/about-card'\nimport './blocks/post-grid'\nimport './blocks/service-card'","module.exports = wp[\"blockEditor\"];","module.exports = wp[\"blocks\"];","module.exports = wp[\"components\"];","module.exports = wp[\"data\"];","module.exports = wp[\"element\"];","module.exports = wp[\"i18n\"];"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AANA;AAUA;AACA;AACA;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAEA;AAIA;AACA;AACA;AAHA;AAOA;AACA;AACA;AAHA;AAOA;AACA;AACA;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;;;;;;;;;;ACrBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAHA;AADA;AAQA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AALA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AALA;AAUA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AADA;AAAA;AAFA;AAYA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAFA;AAKA;AACA;AADA;AAGA;;;;;;;;;;;;AC5EA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AAEA;AACA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AATA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;;;;;;;;;;;ACtBA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AADA;AAJA;AAeA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAUA;AACA;AAFA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AANA;AAYA;AACA;AACA;;;;;;;;;;;;ACpEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAHA;AAOA;AACA;AACA;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AADA;AATA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;;;;;;;;;;ACtBA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;ACDA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}